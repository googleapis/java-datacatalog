// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datacatalog/v1/usage.proto

package com.google.cloud.datacatalog.v1;

public interface UsageSignalOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.datacatalog.v1.UsageSignal)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The end timestamp of the duration of usage statistics.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 1;</code>
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   * <pre>
   * The end timestamp of the duration of usage statistics.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 1;</code>
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   * <pre>
   * The end timestamp of the duration of usage statistics.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 1;</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   * <pre>
   * Output only. BigQuery usage statistics over each of the predefined time ranges.
   * Supported time ranges are `{"24H", "7D", "30D"}`.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.datacatalog.v1.UsageStats&gt; usage_within_time_range = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  int getUsageWithinTimeRangeCount();
  /**
   * <pre>
   * Output only. BigQuery usage statistics over each of the predefined time ranges.
   * Supported time ranges are `{"24H", "7D", "30D"}`.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.datacatalog.v1.UsageStats&gt; usage_within_time_range = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  boolean containsUsageWithinTimeRange(
      java.lang.String key);
  /**
   * Use {@link #getUsageWithinTimeRangeMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.cloud.datacatalog.v1.UsageStats>
  getUsageWithinTimeRange();
  /**
   * <pre>
   * Output only. BigQuery usage statistics over each of the predefined time ranges.
   * Supported time ranges are `{"24H", "7D", "30D"}`.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.datacatalog.v1.UsageStats&gt; usage_within_time_range = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  java.util.Map<java.lang.String, com.google.cloud.datacatalog.v1.UsageStats>
  getUsageWithinTimeRangeMap();
  /**
   * <pre>
   * Output only. BigQuery usage statistics over each of the predefined time ranges.
   * Supported time ranges are `{"24H", "7D", "30D"}`.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.datacatalog.v1.UsageStats&gt; usage_within_time_range = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  /* nullable */
com.google.cloud.datacatalog.v1.UsageStats getUsageWithinTimeRangeOrDefault(
      java.lang.String key,
      /* nullable */
com.google.cloud.datacatalog.v1.UsageStats defaultValue);
  /**
   * <pre>
   * Output only. BigQuery usage statistics over each of the predefined time ranges.
   * Supported time ranges are `{"24H", "7D", "30D"}`.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.datacatalog.v1.UsageStats&gt; usage_within_time_range = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  com.google.cloud.datacatalog.v1.UsageStats getUsageWithinTimeRangeOrThrow(
      java.lang.String key);
}
