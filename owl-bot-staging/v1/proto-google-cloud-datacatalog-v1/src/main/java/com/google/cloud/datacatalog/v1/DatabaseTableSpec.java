// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datacatalog/v1/datacatalog.proto

package com.google.cloud.datacatalog.v1;

/**
 * <pre>
 * Specification that applies to a table resource. Valid only
 * for entries with the `TABLE` type.
 * </pre>
 *
 * Protobuf type {@code google.cloud.datacatalog.v1.DatabaseTableSpec}
 */
public final class DatabaseTableSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.datacatalog.v1.DatabaseTableSpec)
    DatabaseTableSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DatabaseTableSpec.newBuilder() to construct.
  private DatabaseTableSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DatabaseTableSpec() {
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DatabaseTableSpec();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DatabaseTableSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 18: {
            com.google.cloud.datacatalog.v1.DataplexTableSpec.Builder subBuilder = null;
            if (dataplexTable_ != null) {
              subBuilder = dataplexTable_.toBuilder();
            }
            dataplexTable_ = input.readMessage(com.google.cloud.datacatalog.v1.DataplexTableSpec.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dataplexTable_);
              dataplexTable_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.datacatalog.v1.Datacatalog.internal_static_google_cloud_datacatalog_v1_DatabaseTableSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.datacatalog.v1.Datacatalog.internal_static_google_cloud_datacatalog_v1_DatabaseTableSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.datacatalog.v1.DatabaseTableSpec.class, com.google.cloud.datacatalog.v1.DatabaseTableSpec.Builder.class);
  }

  /**
   * <pre>
   * Type of the table.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.datacatalog.v1.DatabaseTableSpec.TableType}
   */
  public enum TableType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default unknown table type.
     * </pre>
     *
     * <code>TABLE_TYPE_UNSPECIFIED = 0;</code>
     */
    TABLE_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * Native table.
     * </pre>
     *
     * <code>NATIVE = 1;</code>
     */
    NATIVE(1),
    /**
     * <pre>
     * External table.
     * </pre>
     *
     * <code>EXTERNAL = 2;</code>
     */
    EXTERNAL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Default unknown table type.
     * </pre>
     *
     * <code>TABLE_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int TABLE_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Native table.
     * </pre>
     *
     * <code>NATIVE = 1;</code>
     */
    public static final int NATIVE_VALUE = 1;
    /**
     * <pre>
     * External table.
     * </pre>
     *
     * <code>EXTERNAL = 2;</code>
     */
    public static final int EXTERNAL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TableType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TableType forNumber(int value) {
      switch (value) {
        case 0: return TABLE_TYPE_UNSPECIFIED;
        case 1: return NATIVE;
        case 2: return EXTERNAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TableType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TableType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TableType>() {
            public TableType findValueByNumber(int number) {
              return TableType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.datacatalog.v1.DatabaseTableSpec.getDescriptor().getEnumTypes().get(0);
    }

    private static final TableType[] VALUES = values();

    public static TableType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TableType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.datacatalog.v1.DatabaseTableSpec.TableType)
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <pre>
   * Type of this table.
   * </pre>
   *
   * <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * Type of this table.
   * </pre>
   *
   * <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType getType() {
    @SuppressWarnings("deprecation")
    com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType result = com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType.valueOf(type_);
    return result == null ? com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType.UNRECOGNIZED : result;
  }

  public static final int DATAPLEX_TABLE_FIELD_NUMBER = 2;
  private com.google.cloud.datacatalog.v1.DataplexTableSpec dataplexTable_;
  /**
   * <pre>
   * Fields specific to a Dataplex table and present only in the Dataplex table
   * entries.
   * </pre>
   *
   * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
   * @return Whether the dataplexTable field is set.
   */
  @java.lang.Override
  public boolean hasDataplexTable() {
    return dataplexTable_ != null;
  }
  /**
   * <pre>
   * Fields specific to a Dataplex table and present only in the Dataplex table
   * entries.
   * </pre>
   *
   * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
   * @return The dataplexTable.
   */
  @java.lang.Override
  public com.google.cloud.datacatalog.v1.DataplexTableSpec getDataplexTable() {
    return dataplexTable_ == null ? com.google.cloud.datacatalog.v1.DataplexTableSpec.getDefaultInstance() : dataplexTable_;
  }
  /**
   * <pre>
   * Fields specific to a Dataplex table and present only in the Dataplex table
   * entries.
   * </pre>
   *
   * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.datacatalog.v1.DataplexTableSpecOrBuilder getDataplexTableOrBuilder() {
    return getDataplexTable();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType.TABLE_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (dataplexTable_ != null) {
      output.writeMessage(2, getDataplexTable());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType.TABLE_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (dataplexTable_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDataplexTable());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.datacatalog.v1.DatabaseTableSpec)) {
      return super.equals(obj);
    }
    com.google.cloud.datacatalog.v1.DatabaseTableSpec other = (com.google.cloud.datacatalog.v1.DatabaseTableSpec) obj;

    if (type_ != other.type_) return false;
    if (hasDataplexTable() != other.hasDataplexTable()) return false;
    if (hasDataplexTable()) {
      if (!getDataplexTable()
          .equals(other.getDataplexTable())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    if (hasDataplexTable()) {
      hash = (37 * hash) + DATAPLEX_TABLE_FIELD_NUMBER;
      hash = (53 * hash) + getDataplexTable().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.datacatalog.v1.DatabaseTableSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specification that applies to a table resource. Valid only
   * for entries with the `TABLE` type.
   * </pre>
   *
   * Protobuf type {@code google.cloud.datacatalog.v1.DatabaseTableSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.datacatalog.v1.DatabaseTableSpec)
      com.google.cloud.datacatalog.v1.DatabaseTableSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.datacatalog.v1.Datacatalog.internal_static_google_cloud_datacatalog_v1_DatabaseTableSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.datacatalog.v1.Datacatalog.internal_static_google_cloud_datacatalog_v1_DatabaseTableSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.datacatalog.v1.DatabaseTableSpec.class, com.google.cloud.datacatalog.v1.DatabaseTableSpec.Builder.class);
    }

    // Construct using com.google.cloud.datacatalog.v1.DatabaseTableSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = 0;

      if (dataplexTableBuilder_ == null) {
        dataplexTable_ = null;
      } else {
        dataplexTable_ = null;
        dataplexTableBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.datacatalog.v1.Datacatalog.internal_static_google_cloud_datacatalog_v1_DatabaseTableSpec_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.datacatalog.v1.DatabaseTableSpec getDefaultInstanceForType() {
      return com.google.cloud.datacatalog.v1.DatabaseTableSpec.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.datacatalog.v1.DatabaseTableSpec build() {
      com.google.cloud.datacatalog.v1.DatabaseTableSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.datacatalog.v1.DatabaseTableSpec buildPartial() {
      com.google.cloud.datacatalog.v1.DatabaseTableSpec result = new com.google.cloud.datacatalog.v1.DatabaseTableSpec(this);
      result.type_ = type_;
      if (dataplexTableBuilder_ == null) {
        result.dataplexTable_ = dataplexTable_;
      } else {
        result.dataplexTable_ = dataplexTableBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.datacatalog.v1.DatabaseTableSpec) {
        return mergeFrom((com.google.cloud.datacatalog.v1.DatabaseTableSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.datacatalog.v1.DatabaseTableSpec other) {
      if (other == com.google.cloud.datacatalog.v1.DatabaseTableSpec.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.hasDataplexTable()) {
        mergeDataplexTable(other.getDataplexTable());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.datacatalog.v1.DatabaseTableSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.datacatalog.v1.DatabaseTableSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * Type of this table.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type of this table.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of this table.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType getType() {
      @SuppressWarnings("deprecation")
      com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType result = com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType.valueOf(type_);
      return result == null ? com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Type of this table.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of this table.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.TableType type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.cloud.datacatalog.v1.DataplexTableSpec dataplexTable_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.datacatalog.v1.DataplexTableSpec, com.google.cloud.datacatalog.v1.DataplexTableSpec.Builder, com.google.cloud.datacatalog.v1.DataplexTableSpecOrBuilder> dataplexTableBuilder_;
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     * @return Whether the dataplexTable field is set.
     */
    public boolean hasDataplexTable() {
      return dataplexTableBuilder_ != null || dataplexTable_ != null;
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     * @return The dataplexTable.
     */
    public com.google.cloud.datacatalog.v1.DataplexTableSpec getDataplexTable() {
      if (dataplexTableBuilder_ == null) {
        return dataplexTable_ == null ? com.google.cloud.datacatalog.v1.DataplexTableSpec.getDefaultInstance() : dataplexTable_;
      } else {
        return dataplexTableBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     */
    public Builder setDataplexTable(com.google.cloud.datacatalog.v1.DataplexTableSpec value) {
      if (dataplexTableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataplexTable_ = value;
        onChanged();
      } else {
        dataplexTableBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     */
    public Builder setDataplexTable(
        com.google.cloud.datacatalog.v1.DataplexTableSpec.Builder builderForValue) {
      if (dataplexTableBuilder_ == null) {
        dataplexTable_ = builderForValue.build();
        onChanged();
      } else {
        dataplexTableBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     */
    public Builder mergeDataplexTable(com.google.cloud.datacatalog.v1.DataplexTableSpec value) {
      if (dataplexTableBuilder_ == null) {
        if (dataplexTable_ != null) {
          dataplexTable_ =
            com.google.cloud.datacatalog.v1.DataplexTableSpec.newBuilder(dataplexTable_).mergeFrom(value).buildPartial();
        } else {
          dataplexTable_ = value;
        }
        onChanged();
      } else {
        dataplexTableBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     */
    public Builder clearDataplexTable() {
      if (dataplexTableBuilder_ == null) {
        dataplexTable_ = null;
        onChanged();
      } else {
        dataplexTable_ = null;
        dataplexTableBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     */
    public com.google.cloud.datacatalog.v1.DataplexTableSpec.Builder getDataplexTableBuilder() {
      
      onChanged();
      return getDataplexTableFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     */
    public com.google.cloud.datacatalog.v1.DataplexTableSpecOrBuilder getDataplexTableOrBuilder() {
      if (dataplexTableBuilder_ != null) {
        return dataplexTableBuilder_.getMessageOrBuilder();
      } else {
        return dataplexTable_ == null ?
            com.google.cloud.datacatalog.v1.DataplexTableSpec.getDefaultInstance() : dataplexTable_;
      }
    }
    /**
     * <pre>
     * Fields specific to a Dataplex table and present only in the Dataplex table
     * entries.
     * </pre>
     *
     * <code>.google.cloud.datacatalog.v1.DataplexTableSpec dataplex_table = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.datacatalog.v1.DataplexTableSpec, com.google.cloud.datacatalog.v1.DataplexTableSpec.Builder, com.google.cloud.datacatalog.v1.DataplexTableSpecOrBuilder> 
        getDataplexTableFieldBuilder() {
      if (dataplexTableBuilder_ == null) {
        dataplexTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datacatalog.v1.DataplexTableSpec, com.google.cloud.datacatalog.v1.DataplexTableSpec.Builder, com.google.cloud.datacatalog.v1.DataplexTableSpecOrBuilder>(
                getDataplexTable(),
                getParentForChildren(),
                isClean());
        dataplexTable_ = null;
      }
      return dataplexTableBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.datacatalog.v1.DatabaseTableSpec)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.datacatalog.v1.DatabaseTableSpec)
  private static final com.google.cloud.datacatalog.v1.DatabaseTableSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.datacatalog.v1.DatabaseTableSpec();
  }

  public static com.google.cloud.datacatalog.v1.DatabaseTableSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DatabaseTableSpec>
      PARSER = new com.google.protobuf.AbstractParser<DatabaseTableSpec>() {
    @java.lang.Override
    public DatabaseTableSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DatabaseTableSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DatabaseTableSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DatabaseTableSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.datacatalog.v1.DatabaseTableSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

