// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datacatalog/v1/datacatalog.proto

package com.google.cloud.datacatalog.v1;

public interface ListTagsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.datacatalog.v1.ListTagsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * [Tag][google.cloud.datacatalog.v1.Tag] details.
   * </pre>
   *
   * <code>repeated .google.cloud.datacatalog.v1.Tag tags = 1;</code>
   */
  java.util.List<com.google.cloud.datacatalog.v1.Tag> 
      getTagsList();
  /**
   * <pre>
   * [Tag][google.cloud.datacatalog.v1.Tag] details.
   * </pre>
   *
   * <code>repeated .google.cloud.datacatalog.v1.Tag tags = 1;</code>
   */
  com.google.cloud.datacatalog.v1.Tag getTags(int index);
  /**
   * <pre>
   * [Tag][google.cloud.datacatalog.v1.Tag] details.
   * </pre>
   *
   * <code>repeated .google.cloud.datacatalog.v1.Tag tags = 1;</code>
   */
  int getTagsCount();
  /**
   * <pre>
   * [Tag][google.cloud.datacatalog.v1.Tag] details.
   * </pre>
   *
   * <code>repeated .google.cloud.datacatalog.v1.Tag tags = 1;</code>
   */
  java.util.List<? extends com.google.cloud.datacatalog.v1.TagOrBuilder> 
      getTagsOrBuilderList();
  /**
   * <pre>
   * [Tag][google.cloud.datacatalog.v1.Tag] details.
   * </pre>
   *
   * <code>repeated .google.cloud.datacatalog.v1.Tag tags = 1;</code>
   */
  com.google.cloud.datacatalog.v1.TagOrBuilder getTagsOrBuilder(
      int index);

  /**
   * <pre>
   * Pagination token of the next results page. Empty if there are
   * no more items in results.
   * </pre>
   *
   * <code>string next_page_token = 2;</code>
   * @return The nextPageToken.
   */
  java.lang.String getNextPageToken();
  /**
   * <pre>
   * Pagination token of the next results page. Empty if there are
   * no more items in results.
   * </pre>
   *
   * <code>string next_page_token = 2;</code>
   * @return The bytes for nextPageToken.
   */
  com.google.protobuf.ByteString
      getNextPageTokenBytes();
}
